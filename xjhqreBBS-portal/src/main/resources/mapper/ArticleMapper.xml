<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xjhqre.portal.mapper.ArticleMapper">

    <sql id="selectArticleVo">
        select article_id,
               title,
               summary,
               content,
               author,
               view_count,
               thumb_count,
               collect_count,
               cover,
               status,
               is_publish,
               sort,
               open_comment,
               create_by,
               create_time,
               update_by,
               update_time,
               remark
        from t_article
    </sql>

    <delete id="deleteThumbArticle">
        delete
        from t_user_article_thumb
        where user_id = #{userId}
          and article_id = #{articleId}
    </delete>

    <!-- 删除文章分类关联 -->
    <delete id="deleteArticleSort">
        delete
        from t_article_sort
        where article_id = #{articleId}
    </delete>

    <!-- 删除文章标签关联 -->
    <delete id="deleteArticleTag">
        delete
        from t_article_tag
        where article_id = #{articleId}
    </delete>

    <!-- 根据分类id查询文章 -->
    <select id="findArticleBySortId" resultType="com.xjhqre.common.domain.portal.Article">
        select a.*
        from t_article a,
             t_article_sort s
        where a.article_id = s.article_id
          and s.sort_id = #{sortId}
          and a.del_flag = '0'
          and a.status = 2 /* 查询已发布的文章 */
    </select>

    <!-- 根据标签id查询文章 -->
    <select id="findArticleByTagId" resultType="com.xjhqre.common.domain.portal.Article">
        select a.*
        from t_article a,
             t_article_tag t
        where a.article_id = t.article_id
          and t.tag_id = #{tagId}
          and a.del_flag = '0'
          and a.status = 2 /* 查询已发布的文章 */
    </select>

    <!-- 查询用户点赞的文章id -->
    <select id="selectUserLikedArticle" resultType="java.lang.Long">
        select article_id
        from t_user_article_thumb
        where user_id = #{userId}
    </select>

    <!-- 根据文章id获取关联的分类id -->
    <select id="getSortIdByArticleId" resultType="java.lang.Long">
        select s.sort_id
        from t_article a,
             t_article_sort s
        where a.article_id = #{articleId}
          and a.article_id = s.article_id
    </select>

    <!-- 根据文章id查询关联的标签id集合 -->
    <select id="getTagIdsByArticleId" resultType="java.lang.Long">
        select t.tag_id
        from t_article a,
             t_article_tag t
        where a.article_id = #{articleId}
          and a.article_id = t.article_id
    </select>

    <!-- 查询浏览过文章的用户id -->
    <select id="getViewUserIds" resultType="java.lang.Long">
        select user_id
        from t_user_article_view
        where article_id = #{articleId}
    </select>

    <!-- 添加文章分类关联 -->
    <insert id="addArticleSort">
        insert into t_article_sort(
        <if test="articleId != null">article_id,</if>
        <if test="sortId != null">sort_id</if>
        )values(
        <if test="articleId != null">#{sortId},</if>
        <if test="sortId != null">#{sortId}</if>
        )
    </insert>

    <!-- 修改分类 -->
    <update id="updateArticleSort">
        update t_article_sort
        set sort_id = #{sortId}
        where article_id = #{articleId}
    </update>

    <!-- 添加文章标签关联 -->
    <insert id="addArticleTag">
        insert into t_article_tag(
        <if test="articleId != null">article_id,</if>
        <if test="tagIds != null">tag_id</if>
        )values
        <foreach collection="tagIds" separator="," item="item" open="(" close=")">
            #{articleId},#{item}
        </foreach>
    </insert>

</mapper>